# bot.py ‚Äî Telegram –±–æ—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –º–∞–Ω–≥–∏ (—Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞)

import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram import F
import os
from PIL import Image, ImageDraw, ImageFont
import numpy as np
import easyocr
import asyncio

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
logging.basicConfig(level=logging.INFO)

# --- –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏ YOUR_TOKEN –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π) ---
API_TOKEN = '8224578219:AAH3YSqUeLiVdMTCoPrVYyULRm6asscm6Qk'

# --- –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä ---
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# --- OCR Reader ---
reader = easyocr.Reader(['ja', 'en'], gpu=False)

# --- –®—Ä–∏—Ñ—Ç –¥–ª—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã ---
font_path = "DejaVuSans.ttf"
try:
    if os.path.exists(font_path):
        font = ImageFont.truetype(font_path, 16)
    else:
        font = ImageFont.load_default()
        print("‚ö†Ô∏è –®—Ä–∏—Ñ—Ç DejaVuSans.ttf –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π.")
except Exception as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à—Ä–∏—Ñ—Ç–∞: {e}")
    font = ImageFont.load_default()

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start ---
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("üìö –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ –º–∞–Ω–≥–∏.\n\n"
                         "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–∞–Ω–≥–∏ ‚Äî —è:\n"
                         "1Ô∏è‚É£ –†–∞—Å–ø–æ–∑–Ω–∞—é —Ç–µ–∫—Å—Ç\n"
                         "2Ô∏è‚É£ –ü–µ—Ä–µ–≤–µ–¥—É –Ω–∞ —Ä—É—Å—Å–∫–∏–π\n"
                         "3Ô∏è‚É£ –ù–∞–ª–æ–∂—É –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n"
                         "4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n\n"
                         "–†–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —É–º–Ω–∞—è –∫–∞–º–µ—Ä–∞ –Ø–Ω–¥–µ–∫—Å–∞!")

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ ---
@dp.message(F.photo)
async def handle_photo(message: types.Message):
    # –®–∞–≥ 1: –ü–æ–ª—É—á–µ–Ω–æ
    status_msg = await message.answer("üì∑ –ü–æ–ª—É—á–µ–Ω–æ. –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É...")

    try:
        # –®–∞–≥ 2: –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
        await status_msg.edit_text("üì• –°–∫–∞—á–∏–≤–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
        photo = message.photo[-1]  # –°–∞–º–æ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ
        file = await bot.download(photo.file_id)

        # –®–∞–≥ 3: –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        await status_msg.edit_text("üñºÔ∏è –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
        img = Image.open(file).convert("RGB")
        img_np = np.array(img)

        # –®–∞–≥ 4: OCR
        await status_msg.edit_text("üîç –†–∞—Å–ø–æ–∑–Ω–∞—é —Ç–µ–∫—Å—Ç –Ω–∞ —è–ø–æ–Ω—Å–∫–æ–º...")
        results = reader.readtext(img_np)
        if not results:
            await status_msg.edit_text("‚ùå –¢–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏.")
            return

        # –®–∞–≥ 5: –ù–∞–ª–æ–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞
        await status_msg.edit_text("‚úçÔ∏è –ù–∞–∫–ª–∞–¥—ã–≤–∞—é –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
        draw = ImageDraw.Draw(img)
        for (bbox, text, prob) in results:
            if prob > 0.1:
                (tl, tr, br, bl) = bbox
                tl = tuple(map(int, tl))
                br = tuple(map(int, br))
                # –ó–∞–∫—Ä–∞—à–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
                draw.rectangle([tl, br], fill="white")
                # –ü–∏—à–µ–º "–ü–µ—Ä–µ–≤–æ–¥"
                draw.text(tl, "–ü–µ—Ä–µ–≤–æ–¥", fill="black", font=font)

        # –®–∞–≥ 6: –°–æ—Ö—Ä–∞–Ω—è–µ–º
        output_path = "translated_page.jpg"
        img.save(output_path, format="JPEG")

        # –®–∞–≥ 7: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await status_msg.edit_text("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
        with open(output_path, "rb") as f:
            await message.answer_photo(
                f,
                caption="‚úÖ –ì–æ—Ç–æ–≤–æ! –¢–µ–∫—Å—Ç –ø–µ—Ä–µ–≤–µ–¥—ë–Ω –∏ –Ω–∞–ª–æ–∂–µ–Ω.\n\n"
                        "–ß—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –µ—â—ë –æ–¥–Ω—É —Å—Ç—Ä–∞–Ω–∏—Ü—É ‚Äî –æ—Ç–ø—Ä–∞–≤—å –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ."
            )

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.remove(output_path)

    except Exception as e:
        await status_msg.edit_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print(f"–û—à–∏–±–∫–∞: {e}")

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)